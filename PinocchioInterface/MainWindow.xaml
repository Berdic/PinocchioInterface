<Controls:MetroWindow x:Class="PinocchioInterface.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PinocchioInterface"
        xmlns:controls ="clr-namespace:PinocchioInterface.Controls"
        xmlns:viewmodel="clr-namespace:PinocchioInterface.ViewModel"
        mc:Ignorable="d"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        Title="Pinocchio GUI" Height="350" Width="700"
        ResizeMode="NoResize">
    <Window.DataContext>
        <viewmodel:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <controls:EnumBooleanConverter x:Key="EnumBooleanConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="1.5*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="2.5*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
            <Label Content="Choose model:"/>
            <TextBox x:Name="tbModelPath" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" Width="160" KeyUp="tbModelPath_KeyUp">
                <TextBox.Text>
                    <Binding Path="ModelPath" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:FileExistsValidator/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button Margin="10 0 0 0" Name="btnBrowse" Click="btnBrowse_Click" Height="25" Content="Browse" />
        </StackPanel>

        <ListBox x:Name="lbModels" Grid.Row="1" Margin="5" HorizontalContentAlignment="Stretch" ItemsSource="{Binding RiggingModels}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="270"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0"  ToolTip="{Binding Path=Path}">
                            <TextBlock Text="{Binding Path=Name}"/>
                        </Label>
                        <Label Grid.Column="1" MouseLeftButtonUp="Label_MouseLeftButtonUp" Content="x" FontWeight="Bold" HorizontalAlignment="Right" ToolTip="Remove from the list"/>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <GroupBox Grid.Row="1" Grid.Column="1" Header="Transformation" Margin="10 0 5 5">
            <GroupBox.Style>
                <Style TargetType="GroupBox" BasedOn="{StaticResource MetroGroupBox}" >
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=lbModels, Path=SelectedIndex}" Value="-1">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </GroupBox.Style>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Content="Rotation (degrees):" FontSize="10" FontWeight="Bold"></Label>
                <StackPanel VerticalAlignment="Top" Grid.Row="1"  Orientation="Horizontal">
                    <Label FontSize="10" Content="X axis:"/>
                    <Slider Maximum="359" Minimum="0" Width="160" Value="{Binding ElementName=lbModels, Path=SelectedItem.XRot, Mode=TwoWay}"/>
                    <TextBox ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" Width="30" x:Name="tbXrot">
                        <TextBox.Text>
                            <Binding ElementName="lbModels" Path="SelectedItem.XRot" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:DegreesValidator/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </StackPanel>
                <StackPanel  VerticalAlignment="Top" Grid.Row="2"   Orientation="Horizontal">
                    <Label FontSize="10" Content="Y axis:"/>
                    <Slider Maximum="359" Minimum="0" Width="160" Value="{Binding ElementName=lbModels, Path=SelectedItem.YRot, Mode=TwoWay}"/>
                    <TextBox ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" Width="30" x:Name="tbYrot">
                        <TextBox.Text>
                            <Binding ElementName="lbModels" Path="SelectedItem.YRot" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:DegreesValidator/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </StackPanel>
                <StackPanel VerticalAlignment="Top" Grid.Row="3"    Orientation="Horizontal">
                    <Label  FontSize="10" Content="Z axis:" />
                    <Slider Maximum="359" Minimum="0" Width="160" Value="{Binding ElementName=lbModels, Path=SelectedItem.ZRot, Mode=TwoWay}"/>
                    <TextBox ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" Width="30" x:Name="tbZrot" >
                        <TextBox.Text>
                            <Binding ElementName="lbModels" Path="SelectedItem.ZRot" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:DegreesValidator/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </StackPanel>
                <Label VerticalAlignment="Bottom" Grid.Row="4" Content="Scale:" FontWeight="Bold" FontSize="10"></Label>
                <StackPanel Grid.Row="5" Orientation="Horizontal">
                    <Label FontSize="10" VerticalAlignment="Center" Content="Value:"/>

                    <TextBox ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" Width="32" Height="25" x:Name="tbScaleFactor">
                        <TextBox.Text>
                            <Binding ElementName="lbModels" Path="SelectedItem.ScaleFactor"  Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:ScaleFactorValidator/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </StackPanel>

            </Grid>
        </GroupBox>

        <StackPanel Margin="5 0 10 0" Grid.Row="1" Grid.Column="2" Orientation="Vertical">
            <GroupBox x:Name="gbMotion" Header="Motion">
                <GroupBox.Style>
                    <Style TargetType="GroupBox" BasedOn="{StaticResource MetroGroupBox}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=lbModels, Path=SelectedIndex}" Value="-1">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </GroupBox.Style>
                <StackPanel Orientation="Vertical">
                    <RadioButton GroupName="MotionGroup" x:Name="rbNone" Content="None" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Motion,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Motion.None}}" />
                    <RadioButton GroupName="MotionGroup" x:Name="rbWalk" Content="Walk" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Motion,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Motion.Walk}}"/>
                    <RadioButton GroupName="MotionGroup" x:Name="rbJump" Content="Jump" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Motion,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Motion.Jump}}"/>
                    <RadioButton GroupName="MotionGroup" x:Name="rbRun" Content="Run" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Motion,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Motion.Run}}"/>
                </StackPanel>
            </GroupBox>

            <GroupBox x:Name="gbSkeleton" Margin="0 0 0 5" Header="Skeleton">
                <GroupBox.Style>
                    <Style TargetType="GroupBox" BasedOn="{StaticResource MetroGroupBox}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=lbModels, Path=SelectedIndex}" Value="-1">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </GroupBox.Style>
                <StackPanel Orientation="Vertical">
                    <RadioButton GroupName="SkeletonGroup" x:Name="rbHuman" Content="Human" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Skeleton,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Skeleton.Human}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <RadioButton GroupName="SkeletonGroup" x:Name="rbQuad" Content="Quad" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Skeleton,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Skeleton.Quad}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <RadioButton.Style>
                            <Style TargetType="RadioButton" BasedOn="{StaticResource MetroRadioButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=rbNone, Path=IsChecked}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>

                    <RadioButton GroupName="SkeletonGroup" x:Name="rbHorse"  Content="Horse" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Skeleton,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Skeleton.Horse}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                        <RadioButton.Style>
                            <Style TargetType="RadioButton" BasedOn="{StaticResource MetroRadioButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=rbNone, Path=IsChecked}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>

                    <RadioButton GroupName="SkeletonGroup" x:Name="rbCentaur"  Content="Centaur" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Skeleton,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Skeleton.Centaur}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                        <RadioButton.Style>
                            <Style TargetType="RadioButton" BasedOn="{StaticResource MetroRadioButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=rbNone, Path=IsChecked}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>

                </StackPanel>
            </GroupBox>
        </StackPanel>
        

        <Button Grid.Row="3" Name="btnAutorig" Click="btnAutorig_Click"  Height="25" Content="Autorig" VerticalAlignment="Center" HorizontalAlignment="Center">
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource MetroButton}">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbXrot}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbYrot}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbZrot}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbScaleFactor}" Value="False"/>
                                <!--<Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbModelPath}" Value="False"/>-->

                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding ElementName=lbModels, Path=Items.Count}" Value="0">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

    </Grid>
</Controls:MetroWindow>

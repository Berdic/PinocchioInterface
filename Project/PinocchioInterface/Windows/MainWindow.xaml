<Controls:MetroWindow x:Class="PinocchioInterface.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PinocchioInterface"
        xmlns:converters ="clr-namespace:PinocchioInterface.Converters"
        xmlns:validators ="clr-namespace:PinocchioInterface.Validators"
        xmlns:viewmodel="clr-namespace:PinocchioInterface.ViewModel"
        xmlns:Helix ="clr-namespace:HelixToolkit.Wpf;assembly=HelixToolkit.Wpf"
        mc:Ignorable="d"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
        Title="Pinocchio GUI" Height="830" Width="700"
        ResizeMode="CanMinimize">
    <Window.DataContext>
        <viewmodel:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <converters:EnumBooleanConverter x:Key="EnumBooleanConverter"/>
        <converters:RiggingModelTo3DModelConverter x:Key="RiggingModelTo3DModelConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="1.5*"/>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="2.5*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid Margin="0 5 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.5*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="0.2*"/>
            </Grid.ColumnDefinitions>
            <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">-->
            <Label Grid.Column="0" Content="Choose model:"/>
            <TextBox Grid.Column="1" HorizontalAlignment="Stretch" x:Name="tbModelPath" KeyUp="tbModelPath_KeyUp">
                <TextBox.Text>
                    <Binding Path="ModelPath" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:FileExistsValidator/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button Grid.Column="2" Width="30" HorizontalAlignment="Right" x:Name="btnBrowse"  Click="btnBrowse_Click" Background="Transparent">
                <!--Style="{DynamicResource MetroCircleButtonStyle}"-->
                <Rectangle Width="20"  Height="15">
                    <Rectangle.Fill>
                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_folder_open}" />
                    </Rectangle.Fill>
                </Rectangle>
            </Button>
        </Grid>
        <!--<Button Margin="10 0 0 0" Name="btnBrowse" Click="btnBrowse_Click" Height="25" Content="Browse" />-->
        <!--</StackPanel>-->
        <ListBox x:Name="lbModels" Margin="5" Grid.Row="1" HorizontalContentAlignment="Stretch" ItemsSource="{Binding RiggingModels}" SelectedItem="{Binding SelectedRiggingModel}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <DockPanel>
                        <Label DockPanel.Dock="Left"  ToolTip="{Binding Path=Path}">
                            <TextBlock Text="{Binding Path=Name}"/>
                        </Label>
                        <Button Width="30" DockPanel.Dock="Right" x:Name="btnRemove" Height="30" Style="{DynamicResource MetroCircleButtonStyle}" Click="btnRemove_Click" HorizontalAlignment="Right">
                            <Rectangle Width="10"  Height="10">
                                <Rectangle.Fill>
                                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_close}" />
                                </Rectangle.Fill>
                            </Rectangle>
                        </Button>
                    </DockPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Button Grid.Row="2" Name="btnAutorig" Click="btnAutorig_Click" Content="Autorig"   Width="60" VerticalAlignment="Center" HorizontalAlignment="Center">
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource MetroButton}">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbXrot}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbYrot}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbZrot}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbScaleFactor}" Value="False"/>
                                <!--<Condition Binding="{Binding Path=(Validation.HasError), ElementName=tbModelPath}" Value="False"/>-->

                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding ElementName=lbModels, Path=Items.Count}" Value="0">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <!--<Button Grid.Row="3" Name="btnAutorig" Click="btnAutorig_Click"  Height="25" Content="Autorig" VerticalAlignment="Center" HorizontalAlignment="Center">
            
        </Button>-->

            <GroupBox Grid.Row="1" Grid.Column="1" Header="Transformation">
                <GroupBox.Style>
                    <Style TargetType="GroupBox" BasedOn="{StaticResource MetroGroupBox}" >
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=lbModels, Path=SelectedIndex}" Value="-1">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </GroupBox.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" Content="Rotation (degrees):" FontSize="12" FontWeight="Bold"></Label>
                    <StackPanel VerticalAlignment="Top" Grid.Row="1"  Orientation="Horizontal">
                        <Label FontSize="10" Content="X axis:"/>
                        <Slider  HorizontalAlignment="Center" Margin="0 0 5 0" Maximum="359" Minimum="0" Width="160" Value="{Binding ElementName=lbModels, Path=SelectedItem.XRot, Mode=TwoWay}"/>
                        <TextBox Width="30" x:Name="tbXrot">
                            <TextBox.Text>
                                <Binding ElementName="lbModels" Path="SelectedItem.XRot" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:DegreesValidator/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>
                    <StackPanel  VerticalAlignment="Top" Grid.Row="2"   Orientation="Horizontal">
                        <Label FontSize="10" Content="Y axis:"/>
                        <Slider Maximum="359" Margin="0 0 5 0" Minimum="0" Width="160" Value="{Binding ElementName=lbModels, Path=SelectedItem.YRot, Mode=TwoWay}"/>
                        <TextBox Width="30" x:Name="tbYrot">
                            <TextBox.Text>
                                <Binding ElementName="lbModels" Path="SelectedItem.YRot" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:DegreesValidator/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>
                    <StackPanel VerticalAlignment="Top" Grid.Row="3"    Orientation="Horizontal">
                        <Label  FontSize="10" Content="Z axis:" />
                        <Slider Maximum="359" Margin="0 0 5 0" Minimum="0" Width="160" Value="{Binding ElementName=lbModels, Path=SelectedItem.ZRot, Mode=TwoWay}"/>
                        <TextBox Width="30" x:Name="tbZrot" >
                            <TextBox.Text>
                                <Binding ElementName="lbModels" Path="SelectedItem.ZRot" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:DegreesValidator/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>
                    <Label VerticalAlignment="Bottom" Grid.Row="4" Content="Scale:" FontWeight="Bold" FontSize="12"></Label>
                    <StackPanel Grid.Row="5" Orientation="Horizontal">
                        <Label FontSize="10" VerticalAlignment="Center" Content="Value:"/>

                        <TextBox Width="32" Height="25" x:Name="tbScaleFactor">
                            <TextBox.Text>
                                <Binding ElementName="lbModels" Path="SelectedItem.ScaleFactor"  Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validators:ScaleFactorValidator/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                    </StackPanel>

                </Grid>
            </GroupBox>

        <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Vertical">
            <GroupBox x:Name="gbSkeleton" Header="Skeleton">
                <GroupBox.Style>
                    <Style TargetType="GroupBox" BasedOn="{StaticResource MetroGroupBox}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=lbModels, Path=SelectedIndex}" Value="-1">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </GroupBox.Style>
                <StackPanel Orientation="Vertical">
                    <RadioButton GroupName="SkeletonGroup" x:Name="rbHuman" Content="Human" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Skeleton,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Skeleton.Human}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                    <RadioButton GroupName="SkeletonGroup" x:Name="rbQuad" Content="Quad" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Skeleton,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Skeleton.Quad}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <RadioButton.Style>
                            <Style TargetType="RadioButton" BasedOn="{StaticResource MetroRadioButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=rbNone, Path=IsChecked}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>

                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>

                    <RadioButton GroupName="SkeletonGroup" x:Name="rbHorse"  Content="Horse" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Skeleton,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Skeleton.Horse}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                        <RadioButton.Style>
                            <Style TargetType="RadioButton" BasedOn="{StaticResource MetroRadioButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=rbNone, Path=IsChecked}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>

                    <RadioButton GroupName="SkeletonGroup" x:Name="rbCentaur"  Content="Centaur" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Skeleton,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Skeleton.Centaur}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                        <RadioButton.Style>
                            <Style TargetType="RadioButton" BasedOn="{StaticResource MetroRadioButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=rbNone, Path=IsChecked}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>

                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>

                </StackPanel>
            </GroupBox>

            <GroupBox x:Name="gbMotion" Header="Motion">
                <GroupBox.Style>
                    <Style TargetType="GroupBox" BasedOn="{StaticResource MetroGroupBox}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=lbModels, Path=SelectedIndex}" Value="-1">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </GroupBox.Style>
                <StackPanel Orientation="Vertical">
                    <RadioButton GroupName="MotionGroup" x:Name="rbNone" Content="None" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Motion,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Motion.None}}" />
                    <RadioButton GroupName="MotionGroup" x:Name="rbWalk" Content="Walk" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Motion,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Motion.Walk}}"/>
                    <RadioButton GroupName="MotionGroup" x:Name="rbJump" Content="Jump" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Motion,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Motion.Jump}}"/>
                    <RadioButton GroupName="MotionGroup" x:Name="rbRun" Content="Run" Margin="5 10 0 0" IsChecked="{Binding ElementName=lbModels, Path=SelectedItem.Motion,  Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static local:Motion.Run}}"/>
                </StackPanel>
            </GroupBox>

        </StackPanel>

        <Grid Grid.Row="3" Grid.ColumnSpan="3">
            <Helix:HelixViewport3D x:Name="myView" ZoomExtentsWhenLoaded="True">
                <!-- Remember to add light to the scene -->
                <Helix:SunLight/>
                <!-- You can also add elements here in the xaml -->
                <ModelVisual3D x:Name="foo" Content="{Binding Path=SelectedRiggingModel, Mode=TwoWay, Converter={StaticResource RiggingModelTo3DModelConverter}}">
                    <ModelVisual3D.Transform>
                        <Transform3DGroup>
                            <Transform3DGroup.Children>
                                <RotateTransform3D>
                                    <RotateTransform3D.Rotation>

                                        <!-- This transformation rotates the object. -->
                                        <AxisAngleRotation3D Axis="0,1,0" Angle="{Binding Path=SelectedRiggingModel.YRot, Mode=TwoWay}" />
                                    </RotateTransform3D.Rotation>
                                </RotateTransform3D>
                                <RotateTransform3D>
                                    <RotateTransform3D.Rotation>

                                        <!-- This transformation rotates the object. -->
                                        <AxisAngleRotation3D Axis="1,0,0" Angle="{Binding Path=SelectedRiggingModel.XRot, Mode=TwoWay}" />
                                    </RotateTransform3D.Rotation>
                                </RotateTransform3D>
                                <RotateTransform3D>
                                    <RotateTransform3D.Rotation>

                                        <!-- This transformation rotates the object. -->
                                        <AxisAngleRotation3D Axis="0,0,1" Angle="{Binding Path=SelectedRiggingModel.ZRot, Mode=TwoWay}" />
                                    </RotateTransform3D.Rotation>
                                </RotateTransform3D>

                                <!-- This Scale Transform stretches the object horizontally by 200 percent and shrinks it 
         vertically by 50 percent. -->
                                <ScaleTransform3D ScaleX="{Binding Path=SelectedRiggingModel.ScaleFactor, Mode=TwoWay}" ScaleY="{Binding Path=SelectedRiggingModel.ScaleFactor, Mode=TwoWay}" ScaleZ="{Binding Path=SelectedRiggingModel.ScaleFactor, Mode=TwoWay}" CenterX="0" CenterY="0" CenterZ="0" />
                            </Transform3DGroup.Children>
                        </Transform3DGroup>
                    </ModelVisual3D.Transform>
                </ModelVisual3D>

                <Helix:GridLinesVisual3D Width="8" Length="8" MinorDistance="1" MajorDistance="1" Thickness="0.01"/>
            </Helix:HelixViewport3D>
        </Grid>
    </Grid>
</Controls:MetroWindow>
